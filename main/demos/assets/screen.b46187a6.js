import{fc as M,f3 as A,et as _,eI as f,fd as E,f4 as G,eu as y,ew as c,eB as u,ez as l,eC as R,eJ as d,eL as x,eM as P,eD as S,eS as H,eX as N,eF as z,f7 as X,ev as v,ex as Y,ey as k,eO as b,eY as J,eA as L}from"./main.a2193d12.js";const Z={A:10,B:12,C:11,E:13,G:24,H:24,J:24,K:35,L:35,M:35,N:35,P:35,R:46,S:47,T:48,V:59,X:[62,61],Y:60},w={en:{},fr:{}};class W{list={};constructor(e,s){M.get(s).then(o=>{o.data.definitions.forEach(r=>w[e][r.code]=r.description),Object.keys(w[e]).forEach(r=>{this.list[r]=w[e][r]})})}fsaToProvinces(e){const s={};let o=Z[e.substring(0,1).toUpperCase()];return typeof o=="number"&&(o=[o]),o.forEach(r=>{s[r]=this.list[r]}),s}}function K(t,e){return new W(t,e)}const T={en:{FSA:"Forward Sortation Area",NTS:"National Topographic System",COORD:"Latitude/Longitude",SCALE:"Scale"},fr:{FSA:"R\xE9gion De Tri D'Acheminement",NTS:"Syst\xE8me National De R\xE9f\xE9rence Cartographique",COORD:"Latitude/Longitude",SCALE:"\xC9chelle"}};class q{allTypes={};validTypes={};filterComplete=!1;constructor(e,s){M.get(s).then(o=>{o.data.definitions.forEach(r=>{T[e][r.code]=r.term.split(`${r.code}-`)[1]}),Object.keys(T[e]).forEach(r=>{this.allTypes[r]=T[e][r],this.validTypes[r]=T[e][r]})})}filterValidTypes(e){if(this.filterComplete)return this.validTypes;if(e=typeof e=="string"?[e]:e,e&&e.length>0)for(const s of e)delete this.validTypes[s];return this.filterComplete=!0,this.validTypes}}function ee(t,e){return new q(t,e)}function te(t,e){const s=/^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)(\s*[,|;\s]\s*)[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)[*]$/,o=/^\d{2,3}[A-P]/,r=/^[ABCEGHJKLMNPRSTVXY]\d[A-Z]/;if(s.test(e)){const n=e.slice(0,-1);return new se(t,n)}else{if(r.test(e))return new oe(t,e);if(o.test(e))return new re(t,e.substring(0,6).toUpperCase());{const n=new $(t,e);return n.onComplete=n.search().then(a=>(n.results=a,n)),n}}}class ${config;query;results=[];onComplete;latLongResult;featureResults=void 0;constructor(e,s){this.query=s,this.config=e}search(){return this.jsonRequest(this.getUrl()).then(e=>this.normalizeNameItems(e.items))}getUrl(e,s,o,r){let n="";return e?n=this.config.geoLocateUrl+"?q="+this.query:o&&r?n=`${this.config.geoNameUrl}?lat=${o}&lon=${r}&num=${this.config.maxResults}`:n=`${this.config.geoNameUrl}?q=${this.query}&num=${this.config.maxResults}`,n}normalizeNameItems(e){return e.filter(s=>this.config.types.validTypes[s.concise.code]).map(s=>({name:s.name,location:s.location,province:this.config.provinces.list[s.province.code],type:this.config.types.allTypes[s.concise.code],LatLon:{lat:s.latitude,lon:s.longitude},bbox:s.bbox}))}jsonRequest(e){return new Promise((s,o)=>{const r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="json",r.onload=()=>{if(r.status===200){const n=typeof r.response=="string"?JSON.parse(r.response):r.response;s(n)}else o("Could not load results from remote service.")},r.send()})}locateByQuery(){return this.jsonRequest(this.getUrl(!0,void 0))}nameByLatLon(e,s,o){return this.jsonRequest(this.getUrl(!1,o,e,s)).then(r=>this.normalizeNameItems(r.items))}}class se extends ${constructor(e,s){super(e,s);let o;o=s.split(/[\s|,|;|]/).filter(i=>!isNaN(i)&&i!=="").map(i=>parseFloat(i));const n=.015,a=[o[1]-n,o[0]-n,o[1]+n,o[0]+n];this.latLongResult={name:`${o[0]},${o[1]}`,location:{latitude:o[0],longitude:o[1]},type:"Latitude/Longitude",position:[o[1],o[0]],bbox:a},this.onComplete=new Promise((i,g)=>{this.nameByLatLon(o[0],o[1]).then(m=>{m?(this.results=m,i(this)):g("Given lat lon coordinates cannot be found")})})}}class oe extends ${constructor(e,s){s=s.substring(0,3).toUpperCase(),super(e,s),this.onComplete=new Promise((o,r)=>{this.formatLocationResult().then(n=>{n?(this.featureResults=n,this.nameByLatLon(n.LatLon.lat,n.LatLon.lon,Object.keys(n._provinces).map(a=>parseInt(a))).then(a=>{this.results=a,o(this)})):r("FSA code given cannot be found.")})})}formatLocationResult(){return this.locateByQuery().then(e=>{if(e.length===1&&this.query){const s=this.config.provinces.fsaToProvinces(this.query);return{fsa:this.query,code:"FSA",desc:this.config.types.allTypes.FSA,province:Object.keys(s).map(o=>s[o]).join(","),_provinces:s,LatLon:{lat:e[0].geometry.coordinates[1],lon:e[0].geometry.coordinates[0]}}}})}}class re extends ${unitName;unit;mapSheets=[];constructor(e,s){super(e,s),s=isNaN(parseInt(s[2]))?"0"+s:s,this.unitName=s,this.onComplete=new Promise((o,r)=>{this.locateByQuery().then(n=>{if(n.length>0&&this.query){const a=this.locateToResult(n);this.unit=a[0],this.mapSheets=a,this.featureResults=this.unit,this.nameByLatLon(this.unit.LatLon.lat,this.unit.LatLon.lon).then(i=>{this.results=i,o(this)})}else r("Given NTS code not found")})})}locateToResult(e){return e.map(o=>{const r=o.title.split(" ");return{nts:r.shift()||"",location:r.join(" "),code:"NTS",desc:this.config.types.allTypes.NTS,LatLon:{lat:o.geometry.coordinates[1],lon:o.geometry.coordinates[0]},bbox:o.bbox}})}equals(e){return this.unitName===e.unitName}}const O="https://geogratis.gc.ca/services/geolocation/@{language}/locate",C="https://geogratis.gc.ca/services/geoname/@{language}/geonames.json",U="https://geogratis.gc.ca/services/geoname/@{language}/codes/province.json",B="https://geogratis.gc.ca/services/geoname/@{language}/codes/concise.json",ne={10:"NL",11:"PE",12:"NS",13:"NB",24:"QC",35:"ON",46:"MB",47:"SK",48:"AB",59:"BC",60:"YU",61:"NT",62:"NU",72:"UF",73:"IW"};class ae{config;constructor(e,s){let o,r,n,a;s?(o=s.geoLocation?s.geoLocation:O,r=s.geoNames?s.geoNames:C,n=s.geoProvince?s.geoProvince:U,a=s.geoTypes?s.geoTypes:B):(o=O,r=C,n=U,a=B),o=o.replace("@{language}",e),r=r.replace("@{language}",e),n=n.replace("@{language}",e),a=a.replace("@{language}",e);const i=s?.settings?s.settings.categories:[],g=s?.settings?s.settings.sortOrder:[],m=s?.settings?s.settings.maxResults:100,V=s?.settings?s?.settings.officialOnly:!1;this.config={language:e,geoNameUrl:r,geoLocateUrl:o,types:ee(e,a),provinces:K(e,n),categories:i,sortOrder:g,maxResults:m,officialOnly:V},this.config.types.filterValidTypes(s?.excludeTypes),this._provinceList=[],this._typeList=[],this._excludedTypes=s?.excludeTypes||[]}get provinceList(){return this._provinceList}get typeList(){return this._typeList}set provinceList(e){this._provinceList=e}set typeList(e){this._typeList=e}findProvinceObj(e){return this.fetchProvinces().find(s=>s.name===e)}query(e){return te(this.config,e.toUpperCase()).onComplete.then(s=>{let o=[];s.featureResults?s.featureResults.fsa?o=[{name:s.featureResults.fsa,bbox:[s.featureResults.LatLon.lon+.02,s.featureResults.LatLon.lat-.02,s.featureResults.LatLon.lon-.02,s.featureResults.LatLon.lat+.02],type:s.featureResults.desc,position:[s.featureResults.LatLon.lon,s.featureResults.LatLon.lat],location:{latitude:s.featureResults.LatLon.lat,longitude:s.featureResults.LatLon.lon,province:this.findProvinceObj(s.featureResults.province)}}]:s.featureResults.nts&&(o=[{name:s.featureResults.nts,bbox:s.featureResults.bbox,type:s.featureResults.desc,position:[s.featureResults.LatLon.lon,s.featureResults.LatLon.lat],location:{city:s.featureResults.location,latitude:s.featureResults.LatLon.lat,longitude:s.featureResults.LatLon.lon}}]):s.latLongResult!==void 0&&(o=[s.latLongResult]);const r=s.results.map(n=>({name:n.name,bbox:n.bbox,type:n.type,position:[n.LatLon.lon,n.LatLon.lat],location:{city:n.location,latitude:n.LatLon.lat,longitude:n.LatLon.lon,province:this.findProvinceObj(n.province)}}));return o.concat(r)})}fetchProvinces(){const e=[],s={code:-1,abbr:"...",name:"..."};e.push(s);const o=this.config.provinces.list;for(const r in o)e.push({code:r,abbr:ne[r],name:o[r]});return this.provinceList=e,this.provinceList}fetchTypes(){const e=[],s={code:-1,name:"..."};e.push(s);const o=this.config.types.allTypes;for(const r in o)this._excludedTypes.includes(r)||e.push({code:r,name:o[r]});return this.typeList=e,this.typeList}}class ie{queryParams;GSservice;searchVal;lastSearchVal;searchResults;savedResults;resultsVisible;loadingResults;constructor(e){const s="en";this.GSservice=new ae(s,e);const o={type:"",province:"",extent:""};this.queryParams=o,this.resultsVisible=!1,this.searchVal="",this.lastSearchVal="",this.searchResults=[],this.savedResults=[],this.loadingResults=!1}}const le={getProvinces:t=>{const e=t.GSservice.fetchProvinces();return e.sort((s,o)=>s.name>o.name?1:-1),e},getTypes:t=>{const e=t.GSservice.fetchTypes();return e.sort((s,o)=>s.name>o.name?1:-1),e}},ce={SET_PROVINCE:(t,e)=>{t.queryParams.province=e},SET_TYPE:(t,e)=>{t.queryParams.type=e},SET_EXTENT:(t,e)=>{t.queryParams.extent=e}},ue={runQuery:function(t){if(t.commit("SET_LOADING_RESULTS",!0),!t.state.searchVal)t.commit("SET_SEARCH_RESULTS",[]),t.commit("SET_SAVED_RESULTS",[]),t.commit("SET_LOADING_RESULTS",!1);else if(t.state.searchVal&&t.state.searchVal!==t.state.lastSearchVal)t.state.GSservice.query(`${t.state.searchVal}*`).then(e=>{t.commit("SET_LAST_SEARCH_VAL",t.state.searchVal),t.commit("SET_SAVED_RESULTS",e);const s=j(t.state.resultsVisible,t.state.queryParams,t.state.savedResults);t.commit("SET_SEARCH_RESULTS",s||[]),t.commit("SET_LOADING_RESULTS",!1)});else{const e=j(t.state.resultsVisible,t.state.queryParams,t.state.savedResults);t.commit("SET_SEARCH_RESULTS",e||[]),t.commit("SET_LOADING_RESULTS",!1)}},setProvince:function(t,e){t.commit("SET_PROVINCE",typeof e>"u"?"":e),t.dispatch("runQuery")},setType:function(t,e){t.commit("SET_TYPE",typeof e>"u"?"":e),t.dispatch("runQuery")},setSearchTerm:function(t,e){t.commit("SET_LAST_SEARCH_VAL",t.state.searchVal),t.commit("SET_SEARCH_VAL",e),t.dispatch("runQuery")},setMapExtent:function(t,e){if(e.visible!==void 0&&t.commit("SET_RESULTS_VISIBLE",e.visible),e.extent.sr.wkid!==4326)throw new Error("an extent that was not projected to wkid 4326 was passed to the geosearch store");t.commit("SET_EXTENT",e.extent),t.dispatch("runQuery")}};function j(t,e,s){return t&&e.extent&&(s=s.filter(o=>o.bbox[0]<=e.extent.xmax&&o.bbox[1]<=e.extent.ymax&&o.bbox[2]>=e.extent.xmin&&o.bbox[3]>=e.extent.ymin)),e.province&&e.province!=="..."&&(s=s.filter(o=>o.location.province.name&&o.location.province.name===e.province)),e.type&&e.type!=="..."&&(s=s.filter(o=>o.type===e.type)),s}var h=(t=>(t.getProvinces="geosearch/getProvinces",t.getTypes="geosearch/getTypes",t.queryParams="geosearch/queryParams",t.searchVal="geosearch/searchVal",t.searchResults="geosearch/searchResults",t.resultsVisible="geosearch/resultsVisible",t.loadingResults="geosearch/loadingResults",t.runQuery="geosearch/runQuery",t.setProvince="geosearch/setProvince",t.setType="geosearch/setType",t.setSearchTerm="geosearch/setSearchTerm",t.setMapExtent="geosearch/setMapExtent",t))(h||{});function rt(t){const e=new ie(t);return{namespaced:!0,state:e,getters:{...le},actions:{...ue,...A.actions(e)},mutations:{...ce,...A.mutations(e)}}}const he=_({data(){return{searchVal:f(h.searchVal),setSearchTerm:E(h.setSearchTerm),onSearchTermChange:G(500,t=>{this.setSearchTerm(t)})}}}),pe={class:"rv-geosearch-bar flex h-40 pb-4"},de=["placeholder","value"];function fe(t,e,s,o,r,n){return c(),u("div",pe,[l("input",{type:"search",class:"flex-grow border-b text-base px-12 py-8 outline-none focus:shadow-outline border-gray-600 mx-8 h-26 min-w-0",placeholder:t.$t("geosearch.searchText"),value:t.searchVal,onInput:e[0]||(e[0]=a=>t.onSearchTermChange(a.target.value))},null,40,de)])}var me=y(he,[["render",fe],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/search-bar.vue"]]);const ge=_({name:"GeosearchTopFiltersV",data(){return{provinces:f(h.getProvinces),types:f(h.getTypes),queryParams:f(h.queryParams),setProvince:E(h.setProvince),setType:E(h.setType)}},methods:{clearFilters(){this.setProvince(void 0),this.setType(void 0)}}}),ve={class:"rv-geosearch-top-filters flex w-full mx-8"},_e={class:"inline-block w-2/5 h-40"},ye=["value"],be={value:"",disabled:"",hidden:""},Le={class:"inline-block w-2/5 h-40 mx-16"},Te=["value"],Re={value:"",disabled:"",hidden:""},Se=["disabled","content"],Ee=l("div",{class:"rv-geosearch-icon"},[l("svg",{class:"fill-current w-18 h-18 mr-16",viewBox:"0 0 23 21"},[l("path",{d:"M 14.7574,20.8284L 17.6036,17.9822L 14.7574,15.1716L 16.1716,13.7574L 19.0178,16.568L 21.8284,13.7574L 23.2426,15.1716L 20.432,17.9822L 23.2426,20.8284L 21.8284,22.2426L 19.0178,19.3964L 16.1716,22.2426L 14.7574,20.8284 Z M 2,2L 19.9888,2.00001L 20,2.00001L 20,2.01122L 20,3.99999L 19.9207,3.99999L 13,10.9207L 13,22.909L 8.99999,18.909L 8.99999,10.906L 2.09405,3.99999L 2,3.99999L 2,2 Z "})])],-1),$e=[Ee];function Ve(t,e,s,o,r,n){const a=R("tippy");return c(),u("div",ve,[l("div",_e,[l("select",{class:"form-select border-b border-b-gray-600 w-full h-auto py-0 cursor-pointer",value:t.queryParams.province,onChange:e[0]||(e[0]=i=>t.setProvince(i.target.value))},[l("option",be,d(t.$t("geosearch.filters.province")),1),(c(!0),u(x,null,P(t.provinces,i=>(c(),u("option",{key:i.code},d(i.name),1))),128))],40,ye)]),l("div",Le,[l("select",{class:"form-select border-b border-b-gray-600 w-full h-auto py-0 cursor-pointer",value:t.queryParams.type,onChange:e[1]||(e[1]=i=>t.setType(i.target.value))},[l("option",Re,d(t.$t("geosearch.filters.type")),1),(c(!0),u(x,null,P(t.types,i=>(c(),u("option",{key:i.code},d(i.name),1))),128))],40,Te)]),S((c(),u("button",{class:"inline-block flex text-gray-400 w-1/8 hover:text-black float-right disabled:cursor-default disabled:text-gray-400",disabled:!t.queryParams.type&&!t.queryParams.province,onClick:e[2]||(e[2]=(...i)=>t.clearFilters&&t.clearFilters(...i)),content:t.$t("geosearch.filters.clear")},$e,8,Se)),[[a,{placement:"bottom"}]])])}var we=y(ge,[["render",Ve],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/top-filters.vue"]]);const xe=_({name:"GeosearchBottomFiltersV",data(){return{resultsVisible:f(h.resultsVisible),setMapExtent:E(h.setMapExtent),onMapExtentChange:G(300,t=>{this.latLongExtent(t).then(e=>{this.setMapExtent({extent:e,visible:this.resultsVisible})})})}},mounted(){this.$iApi.event.on(H.MAP_EXTENTCHANGE,this.onMapExtentChange,"geosearch_map_extent")},beforeUnmount(){this.$iApi.event.off("geosearch_map_extent")},methods:{async latLongExtent(t){return t.sr.wkid===4326?t:await this.$iApi.geo.proj.projectGeometry(4326,t)},updateMapExtent(t){this.latLongExtent(this.$iApi.geo.map.getExtent()).then(e=>{this.setMapExtent({extent:e,visible:t})})}}}),Pe={class:"rv-geosearch-bottom-filters"},Ne={class:"bg-white"},Ae={class:"ml-8 cursor-pointer"},ke=["checked"];function Oe(t,e,s,o,r,n){return c(),u("div",Pe,[l("div",Ne,[l("label",Ae,[l("input",{type:"checkbox",class:"form-checkbox border-2 mx-8 border-gray-600 cursor-pointer",checked:t.resultsVisible,onChange:e[0]||(e[0]=a=>t.updateMapExtent(a.target.checked))},null,40,ke),N(d(t.$t("geosearch.visible")),1)])])])}var Ce=y(xe,[["render",Oe],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/bottom-filters.vue"]]);const Ue=_({name:"GeosearchLoadingBarV"}),Be={class:"w-full h-6 relative overflow-hidden rounded-full indeterminate"},je={class:"h-full progressbar bg-blue-800 rounded-full top-0","aria-valuemin":"0","aria-valuemax":"100"},Me={class:"flex items-center h-full"};function Ge(t,e,s,o,r,n){return c(),u("div",Be,[l("div",je,[l("span",Me,[z(t.$slots,"default",{},void 0,!0)])])])}var Ie=y(Ue,[["render",Ge],["__scopeId","data-v-31c7f983"],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/loading-bar.vue"]]);const De=_({name:"GeosearchScreenV",props:{panel:{type:Object}},components:{"geosearch-bar":me,"geosearch-top-filters":we,"geosearch-bottom-filters":Ce,"loading-bar":Ie},data(){return{searchVal:f(h.searchVal),searchResults:f(h.searchResults),loadingResults:f(h.loadingResults)}},methods:{zoomIn(t){let e=new X("zoomies",t.position);this.$iApi.geo.map.zoomMapTo(e,5e4)},highlightSearchTerm(t,e){const s=t.replace(new RegExp(`${this.searchVal.value}`,"gi"),o=>'<span class="font-bold text-blue-600">'+o+"</span>");return e?s+",":s}}}),Fe={class:"flex flex-col h-full"},Qe={class:"px-5 mb-10 truncate"},He={key:0,class:"relative h-48"},ze={class:"font-bold text-blue-600"},Xe={key:0,class:"rv-results-list flex-grow mb-5 border-t border-b border-gray-600 overflow-hidden overflow-y-auto"},Ye=["onClick"],Je={class:"rv-result-description px-8"},Ze={class:"flex-1 text-left truncate font-bold"},We=["innerHTML"],Ke={key:0,class:"text-gray-600 text-sm"},qe={key:0,class:"flex-1 text-left truncate text-sm"};function et(t,e,s,o,r,n){const a=v("geosearch-bar"),i=v("geosearch-top-filters"),g=v("loading-bar"),m=v("geosearch-bottom-filters"),V=v("panel-screen"),I=R("truncate"),D=R("focus-item"),F=R("focus-list");return c(),Y(V,{panel:t.panel},{header:k(()=>[N(d(t.$t("geosearch.title")),1)]),content:k(()=>[l("div",Fe,[b(a),b(i),b(g,{class:J(["flex-none",{invisible:!t.loadingResults}])},null,8,["class"]),l("div",Qe,[t.searchVal&&t.searchResults.length===0&&!t.loadingResults?(c(),u("span",He,[N(d(t.$t("geosearch.noResults")),1),l("span",ze,'"'+d(t.searchVal)+'"',1)])):L("v-if",!0)]),t.searchResults.length>0?S((c(),u("ul",Xe,[(c(!0),u(x,null,P(t.searchResults,(p,Q)=>(c(),u("li",{class:"relative h-56",key:Q},[S((c(),u("button",{class:"absolute inset-0 h-full w-full hover:bg-gray-300 default-focus-style",onClick:st=>t.zoomIn(p),style:{"border-bottom":"1px solid lightgray"}},[S((c(),u("div",Je,[l("div",Ze,[l("span",{innerHTML:t.highlightSearchTerm(p.name,p.location.province)},null,8,We),p.location.province?(c(),u("span",Ke,d(p.location.city?" "+p.location.city+", "+p.location.province.abbr:" "+p.location.province.abbr),1)):L("v-if",!0)]),p.type?(c(),u("div",qe,d(p.type),1)):L("v-if",!0)])),[[I]])],8,Ye)),[[D,"show-truncate"]])]))),128))])),[[F]]):L("v-if",!0),b(m,{class:"mt-auto"})])]),_:1},8,["panel"])}var tt=y(De,[["render",et],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/screen.vue"]]),nt=Object.freeze(Object.defineProperty({__proto__:null,default:tt},Symbol.toStringTag,{value:"Module"}));export{tt as G,rt as g,nt as s};
