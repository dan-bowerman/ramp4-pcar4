import{fv as m,j0 as f,eT as p,j1 as g,iL as u,j2 as F,fG as n,j3 as l,eZ as L,j5 as R,j6 as S,jh as w,fd as d,iw as C}from"./main.0c522c3b.js";import{A as E}from"./attrib-layer.19791ea8.js";function h(o,e){if(o.findIndex(i=>i.name===e)===-1){const i=o.find(s=>s.alias===e);return i?i.name:(console.warn(`Cannot find name field in layer field list: ${e}`),"OBJECTID")}else return e}class A extends E{esriJson;sourceGeoJson;tooltipField;constructor(e,i){super(e,i),this.supportsIdentify=!0,this.isFile=!0,this.layerType=m.FEATURE,this.dataFormat=f.ESRI_FEATURE,this.tooltipField=""}async initiate(){const e=typeof this.sourceGeoJson=="string"?JSON.parse(this.sourceGeoJson):this.sourceGeoJson,i={layerId:this.origRampConfig.id||"",targetSR:this.$iApi.geo.map.getSR(),...this.origRampConfig.latField&&{latField:this.origRampConfig.latField},...this.origRampConfig.longField&&{lonField:this.origRampConfig.longField}};this.esriJson=await this.$iApi.geo.layer.files.geoJsonToEsriJson(e,i),this.esriLayer=p(new g(this.makeEsriLayerConfig(this.origRampConfig))),this.esriJson=void 0,await super.initiate()}makeEsriLayerConfig(e){const i=super.makeEsriLayerConfig(e);return["source","objectIdField","id","fields","renderer","spatialReference","geometryType"].forEach(t=>{i[t]=this.esriJson[t]}),i.displayField=h(i.fields,this.origRampConfig.nameField||"")||"OBJECTID",i.outFields=["*"],this.esriJson=void 0,delete i.url,i}onLoadActions(){const e=super.onLoadActions();if(this.esriLayer&&this.origRampConfig.customRenderer?.type&&(this.esriLayer.renderer=u(this.config.customRenderer)),this.layerTree.name=this.name,this.extractLayerMetadata(),this.origRampConfig.tooltipField?this.tooltipField=h(this.esriFields,this.origRampConfig.tooltipField):this.tooltipField=this.nameField,this.processFieldMetadata(this.origRampConfig.fieldMetadata),!this.attLoader)throw new Error("file fc did not have attribute loader object");return this.attLoader.updateFieldList(this.fieldList),this.featureCount=this.esriLayer?.source.length||0,e.push(this.viewPromise.getPromise()),e}runIdentify(e){const i=this.$iApi.geo.map;if(!this.isValidState||!this.visibility||!this.identify||this.scaleSet.isOffScale(i.getScale()).offScale)return[];const s=new F,t=n({items:[],loading:s.getPromise(),loaded:!1,uid:this.uid,requestTime:Date.now()}),r={outFields:this.fieldList,includeGeometry:!1};return this.geomType!==l.POLYGON&&e.geometry.type===l.POINT?r.filterGeometry=this.$iApi.geo.query.makeClickBuffer(e.geometry,e.tolerance):r.filterGeometry=e.geometry,r.filterSql=this.getCombinedSqlFilter(),this.queryFeatures(r).then(a=>{a.forEach(c=>{const y=n({data:c.attributes,format:L.ESRI,loaded:!0,loading:Promise.resolve()});t.items.push(y)}),t.loaded=!0,s.resolveMe()}),[t]}extractLayerMetadata(){const e=this.esriLayer;if(!e)throw new Error("file layer attempted to extract data from esri layer, esri layer did not exist");this.supportsFeatures=!0,this.geomType=this.$iApi.geo.geom.clientGeomTypeToRampGeomType(e.geometryType),this.quickCache=new R(this.geomType),this.scaleSet.minScale=e.minScale||0,this.scaleSet.maxScale=e.maxScale||0,this.extent=S.fromESRI(e.fullExtent,this.id+"_extent"),this.esriFields=e.fields,this.nameField=e.displayField,this.oidField=e.objectIdField,this.renderer=this.$iApi.geo.symbology.makeRenderer(e.renderer,this.esriFields),this.legend=this.$iApi.geo.symbology.rendererToLegend(this.renderer);const i={sourceGraphics:e.source,oidField:this.oidField,attribs:"*",batchSize:-1};this.attLoader=new w(this.$iApi,i)}async getGraphic(e,i){const s={filterSql:`${this.oidField}=${e}`,includeGeometry:!!i.getGeom},t=await this.queryFeatures(s);if(t.length===0)throw new Error(`Could not find object id ${e}`);t.length!==1&&console.warn("did not get a single result on a query for a specific object id");const r=t[0];if(i.getStyle){const a=d(this.renderer.getGraphicSymbol(r.attributes));r.style=this.$iApi.geo.geom.styleEsriToRamp(a)}return r}async queryFeatures(e){const i={layer:this,...e};return this.$iApi.geo.query.geoJsonQuery(i)}async queryOIDs(e){const i={layer:this,...e};return(await this.$iApi.geo.query.geoJsonQuery(i)).map(t=>t.attributes?t.attributes[this.oidField]:-1)}applySqlFilter(e=[]){if(!this.esriView){this.noLayerErr();return}const i=this.filter.getCombinedSql(e);d(this.esriView).filter=new C({where:i})}}export{A as F};
